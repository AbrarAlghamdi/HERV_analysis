import pandas as pd
import os

# Input and output paths
input_file = "./ttest_fdr_results/differential_expression_ttest_fdr.tsv"
output_dir = "./ttest_fdr_results/top_transcripts"
os.makedirs(output_dir, exist_ok=True)

# Load results
df = pd.read_csv(input_file, sep='\t')

# Filter significant transcripts (adjusted p < 0.05)
sig_df = df[df['fdr_adjusted_p'] < 0.05]

# Top upregulated in sep (positive log2FC and significant)
top_sep = sig_df[sig_df['log2_fold_change'] > 0].sort_values('log2_fold_change', ascending=False).head(20)
top_sep.to_csv(os.path.join(output_dir, "top_upregulated_in_sep.tsv"), sep='\t', index=False)

# Top upregulated in aug (negative log2FC and significant)
top_aug = sig_df[sig_df['log2_fold_change'] < 0].sort_values('log2_fold_change', ascending=True).head(20)
top_aug.to_csv(os.path.join(output_dir, "top_upregulated_in_aug.tsv"), sep='\t', index=False)

print("Corrected top transcript files saved:")
print("- top_upregulated_in_sep.tsv (only positive fold change)")
print("- top_upregulated_in_aug.tsv (only negative fold change)")

11.12 R script for simulation part 
File name: simulate.R
#! /usr/bin/env Rscript

args = commandArgs(trailingOnly=TRUE)

nfrags <- as.integer(args[1])
locs <- unlist(strsplit(args[2], ","))

library(Biostrings)
library(polyester)

stopifnot(nfrags %% length(locs) == 0)

params <- list(
    outdir="sims",
    fraglen=250, fragsd=25, readlen=75, paired=TRUE,
    error_model="illumina5", error_rate=0.005,
    total_reads=nfrags, num_reps=1
    )

countmat <- data.frame(
    sample_01=rep.int(nfrags/length(locs), length(locs)),
    row.names=locs
    )

write.table(countmat, file=file.path(params$outdir, 'countmat.tsv'), sep='\t', quote=F)

allseqs <- readDNAStringSet("refs/HML2_extracted.fna")
writeXStringSet(allseqs[rownames(countmat)], "tmp.fasta")

simulate_experiment_countmat(
                    fasta = "tmp.fasta",
                    readmat = as.matrix(countmat),
                    outdir = params$outdir,
                    fraglen = params$fraglen,
                    fragsd = params$fragsd,
                    readlen = params$readlen,
                    error_model = params$error_model,
                    error_rate = params$error_rate,
                    )

unlink("tmp.fasta")

